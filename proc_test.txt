CREATE PROCEDURE [METABASE].update_pr_scope_merge_fin1_stg
  (
  IN  p_sequence         integer,
  IN  p_job_name         varchar(256),
  IN  p_task_name        varchar(256),
  IN  p_job_id           integer,
  IN  p_task_id          integer,
  OUT p_return_msg       varchar(256),
  OUT p_status           integer
  )
BEGIN

  -- =============================================================================
  -- DBMS Name      :    AWS Teradata
  -- Script Name    :    update_pr_scope_merge_fin1_st
  -- Description    :    Build the table pr_scope_merge_fin1_stg
  -- Generated by   :    WhereScape RED Version 8.3.1.0 (build 190201-084748)
  -- Generated for  :    Juniper Networks
  -- Generated on   :    Tuesday, June 29, 2021 at 07:14:21
  -- Author         :    manthig
  -- =============================================================================
  -- Notes / History
  --

  --=====================================================
  -- Control variables used in most programs
  --=====================================================
  DECLARE v_msgtext            varchar(255);  -- Text for audit_trail
  DECLARE v_sql                varchar(255);  -- Text for SQL statements
  DECLARE v_set                integer;       -- commit set
  DECLARE v_analyze_flag       integer;       -- analyze flag
  DECLARE v_step               integer;       -- return code
  DECLARE v_update_count       integer;       -- no of records updated
  DECLARE v_insert_count       integer;       -- no of records inserted
  DECLARE v_count              integer;       -- General counter
  DECLARE v_sql_code           integer;       -- SQL Error Code for Audit Trail
  DECLARE v_sql_error          varchar(255);  -- SQL Error Code for Audit Trail as varchar

  --=====================================================
  -- Variables
  --=====================================================


  --=====================================================
  -- Exceptions
  --=====================================================
  DECLARE EXIT HANDLER
    FOR SQLEXCEPTION
    BEGIN
      GET DIAGNOSTICS EXCEPTION 1 v_sql_error = MESSAGE_TEXT;
      SET v_sql_code = SQLCODE;
      SET v_msgtext = SUBSTR('Unhandled Exception in pr_scope_merge_fin1_stg. '||
          ' Step ' || CAST(v_step AS VARCHAR(64)) ||
          '   SQL Error Code: ' || CAST(v_sql_code AS VARCHAR(10)) || ' - ' || v_sql_error,1,255);
      SET p_return_msg = v_msgtext;
      CALL [METABASE].WsWrkAudit('F', :p_job_name, :p_task_name, :p_sequence
          , :v_msgtext, :v_sql_code, :v_sql_error, :p_task_id, :p_job_id);
      SET p_status = -3;
    END;

  --=====================================================
  -- Main
  --=====================================================
  SET v_step = 100;
  SET v_insert_count = 0;


  --=====================================================
  -- Delete all existing data from the table
  --=====================================================
  DELETE FROM [TABLEOWNER].[pr_scope_merge_fin1_stg] ALL;

  SET v_step = 200;

  --=====================================================
  -- Insert new records
  --=====================================================
  INSERT INTO [TABLEOWNER].[pr_scope_merge_fin1_stg]
  ( id
  , category
  , synopsis
  , confidential
  , customer_risk
  , old_priority
  , dev_introduced_rli_or_pr
  , dev_phase_to_improve
  , class_
  , submitter_id
  , related_prs
  , rli
  , arrival_date
  , last_modified
  , originator
  , blocking_release
  , committed_in
  , beta_programs
  , beta_customers
  , keywords
  , release_plan
  , attributes_
  , root_cause
  , dev_area_to_improve
  , old_jtac_eid
  , customer
  , beta_priority
  , admin_change
  , product
  , old_jtac_eid_assigned_date
  , cust_visible_behavior_changed
  , fix_eta
  , fix_eta_scope
  , pr_impact
  , software_image
  , external_id
  , functional_area
  , test_area_to_improve
  , customer_escalation_owner
  , add_to_audit_trail
  , testcase_id
  , platform
  , jtac_case_id
  , supporting_device_product
  , supporting_device_platform
  , supporting_device_sw_image
  , supporting_device_release
  , cvss_base_score
  , test_type
  , last_known_working_release
  , ix_owner
  , test_escape_reason
  , updated_by_responsible
  , customer_support_level
  , reported_in
  , cvbc_documented_in
  , sdk_impact
  , latest_summary_status
  , client_os
  , legacy_customer
  , client_browser
  , fix_risk_level
  , npi_program
  , found_during
  , resolved_in
  , workaround_provided
  , duplicate_prs
  , test_escape_cause
  , originally_reported_in
  , test_status
  , problem_level
  , problem_level_type
  , cvbc_type
  , cvbc_backward_compatible
  , cvbc_custodian
  , cvbc_pr_state
  , external_title
  , affected_releases
  , share_with_customers
  , review_status
  , author
  , cve_id
  , test_gap_analysis_status
  , test_case_available
  , part_of_regression
  , security_vulnerability
  , rc_test_gap_owner
  , rc_regression_owner
  , bug_escape_why_1
  , bug_escape_why_2
  , scope_id
  , identifier
  , branch
  , planned_release
  , customer_escalation
  , blocker
  , state
  , resolution
  , target
  , verified_in
  , created
  , updated
  , verify_resolution_date
  , closed_date
  , responsible
  , dev_owner
  , bugblitz_owner
  , responsible_drvd
  , bbi_owner
  , owner_drvd
  , systest_owner
  , committed_release
  , conf_committed_release
  , release_note_required
  , category_bu
  , category_spoc
  , originator_manager
  , responsible_manager
  , bugblitz_pr_type
  , devowner_manager
  , lss_state
  , full_pr_num
  , junos_ind
  , non_junos_ind
  , planned_release_full_jops
  , planned_release_full_1
  , planned_release_type_jops
  , release_major
  , release_minor_jops
  , planned_release_major_jops
  , jops_owner_key
  , release_sub_jops
  , branch_type
  , ju_dashboard_release
  , ju_release_major
  , ju_release_minor
  , Ju_branch_release
  , dashboard_owner_key
  , resolution_reason
  , planned_release_flag
  , active_release_flag
  , branch_state_flag
  , all_blocker_prs_Ind
  , beta_blocker_prs_Ind
  , PendingMR_Blocker_PRs_Ind
  , toxic_blocker_prs_Ind
  , test_blocker_prs_Ind
  , x_w_release_prs_Ind
  , tot_blocker_prs_Ind
  , blockers_without_fix_eta_Ind
  , release_blocker_prs_Ind
  , total_prs_Ind
  , CL1_Ind
  , sirt_state
  , CL2_Ind
  , CL3_Ind
  , CL4_Ind
  , IL1_Ind
  , IL2_Ind
  , IL3_Ind
  , IL4_Ind
  , major_prs_Ind
  , minor_prs_Ind
  , regression_prs_Ind
  , critical_prs_Ind
  , build_break_prs_Ind
  , Escalation_prs_Ind
  , sisyphus_build_break_prs_Ind
  , customer_crit_hi_prs_Ind
  , cvbc_prs_Ind
  , prs_non_junos_cat_user_Ind
  , prs_user_dev_branch_Ind
  , cidb_prs_Ind
  , no_milestones_blocker_prs_Ind
  , prs_wo_release_Ind
  , prs_user_private_branch_Ind
  , unclosed_test_Ind
  , prs_unassigned_cat_user_Ind
  , prs_user_unscheduled_dev_Ind
  , branch_dev_Ind
  , branch_responsible_Ind
  , jops_ib_ind
  , smoke_test_prs_Ind
  , issu_nsr_prs_Ind
  , reported_in_components
  , scope_product_group
  , dependent_scopes
  , backlog_pr
  , partner
  , scope_rli
  , backlog_scope
  , release_note
  )
  SELECT  
          pr_scope_merge_stg.id
        , pr_scope_merge_stg.category
        , pr_scope_merge_stg.synopsis
        , pr_scope_merge_stg.confidential
        , pr_scope_merge_stg.customer_risk
        , pr_scope_merge_stg.old_priority
        , pr_scope_merge_stg.dev_introduced_rli_or_pr
        , pr_scope_merge_stg.dev_phase_to_improve
        , pr_scope_merge_stg.class_
        , pr_scope_merge_stg.submitter_id
        , pr_scope_merge_stg.related_prs
        , pr_scope_merge_stg.rli
        , pr_scope_merge_stg.arrival_date
        , pr_scope_merge_stg.last_modified
        , pr_scope_merge_stg.originator
        , pr_scope_merge_stg.blocking_release
        , pr_scope_merge_stg.committed_in
        , pr_scope_merge_stg.beta_programs
        , pr_scope_merge_stg.beta_customers
        , pr_scope_merge_stg.keywords
        , pr_scope_merge_stg.release_plan
        , pr_scope_merge_stg.attributes_
        , pr_scope_merge_stg.root_cause
        , pr_scope_merge_stg.dev_area_to_improve
        , pr_scope_merge_stg.old_jtac_eid
        , pr_scope_merge_stg.customer
        , pr_scope_merge_stg.beta_priority
        , pr_scope_merge_stg.admin_change
        , pr_scope_merge_stg.product
        , pr_scope_merge_stg.old_jtac_eid_assigned_date
        , pr_scope_merge_stg.cust_visible_behavior_changed
        , pr_scope_merge_stg.fix_eta
        , pr_scope_merge_stg.fix_eta_scope
        , pr_scope_merge_stg.pr_impact
        , pr_scope_merge_stg.software_image
        , pr_scope_merge_stg.external_id
        , pr_scope_merge_stg.functional_area
        , pr_scope_merge_stg.test_area_to_improve
        , pr_scope_merge_stg.customer_escalation_owner
        , pr_scope_merge_stg.add_to_audit_trail
        , pr_scope_merge_stg.testcase_id
        , pr_scope_merge_stg.platform
        , pr_scope_merge_stg.jtac_case_id
        , pr_scope_merge_stg.supporting_device_product
        , pr_scope_merge_stg.supporting_device_platform
        , pr_scope_merge_stg.supporting_device_sw_image
        , pr_scope_merge_stg.supporting_device_release
        , pr_scope_merge_stg.cvss_base_score
        , pr_scope_merge_stg.test_type
        , pr_scope_merge_stg.last_known_working_release
        , pr_scope_merge_stg.ix_owner
        , pr_scope_merge_stg.test_escape_reason
        , pr_scope_merge_stg.updated_by_responsible
        , pr_scope_merge_stg.customer_support_level
        , pr_scope_merge_stg.reported_in
        , pr_scope_merge_stg.cvbc_documented_in
        , pr_scope_merge_stg.sdk_impact
        , pr_scope_merge_stg.latest_summary_status
        , pr_scope_merge_stg.client_os
        , COALESCE(pr_scope_merge_stg.legacy_customer, 0)
        , pr_scope_merge_stg.client_browser
        , pr_scope_merge_stg.fix_risk_level
        , pr_scope_merge_stg.npi_program
        , pr_scope_merge_stg.found_during
        , pr_scope_merge_stg.resolved_in
        , pr_scope_merge_stg.workaround_provided
        , pr_scope_merge_stg.duplicate_prs
        , pr_scope_merge_stg.test_escape_cause
        , COALESCE(pr_scope_merge_stg.originally_reported_in, 0)
        , pr_scope_merge_stg.test_status
        , pr_scope_merge_stg.problem_level
        , pr_scope_merge_stg.problem_level_type
        , pr_scope_merge_stg.cvbc_type
        , pr_scope_merge_stg.cvbc_backward_compatible
        , pr_scope_merge_stg.cvbc_custodian
        , pr_scope_merge_stg.cvbc_pr_state
        , pr_scope_merge_stg.external_title
        , pr_scope_merge_stg.affected_releases
        , pr_scope_merge_stg.share_with_customers
        , pr_scope_merge_stg.review_status
        , pr_scope_merge_stg.author
        , pr_scope_merge_stg.cve_id
        , pr_scope_merge_stg.test_gap_analysis_status
        , pr_scope_merge_stg.test_case_available
        , pr_scope_merge_stg.part_of_regression
        , pr_scope_merge_stg.security_vulnerability
        , pr_scope_merge_stg.rc_test_gap_owner
        , pr_scope_merge_stg.rc_regression_owner
        , pr_scope_merge_stg.bug_escape_why_1
        , pr_scope_merge_stg.bug_escape_why_2
        , pr_scope_merge_stg.scope_id
        , pr_scope_merge_stg.identifier
        , pr_scope_merge_stg.branch
        , pr_scope_merge_stg.planned_release
        , pr_scope_merge_stg.customer_escalation
        , pr_scope_merge_stg.blocker
        , pr_scope_merge_stg.state
        , pr_scope_merge_stg.resolution
        , pr_scope_merge_stg.target
        , pr_scope_merge_stg.verified_in
        , pr_scope_merge_stg.created
        , pr_scope_merge_stg.updated
        , pr_scope_merge_stg.verify_resolution_date
        , pr_scope_merge_stg.closed_date
        , pr_scope_merge_stg.responsible
        , pr_scope_merge_stg.dev_owner
        , pr_scope_merge_stg.bugblitz_owner
        , pr_scope_merge_stg.responsible_drvd
        , pr_scope_merge_stg.bbi_owner
        , pr_scope_merge_stg.owner_drvd
        , pr_scope_merge_stg.systest_owner
        , pr_scope_merge_stg.committed_release
        , pr_scope_merge_stg.conf_committed_release
        , pr_scope_merge_stg.release_note_required
        , pr_scope_merge_stg.category_bu
        , pr_scope_merge_stg.category_spoc
        , pr_scope_merge_stg.originator_manager
        , pr_scope_merge_stg.responsible_manager
        , pr_scope_merge_stg.bugblitz_pr_type
        , pr_scope_merge_stg.devowner_manager
        , pr_scope_merge_stg.lss_state
        , pr_scope_merge_stg.full_pr_num
        , pr_scope_merge_stg.junos_ind
        , pr_scope_merge_stg.non_junos_ind
        , pr_scope_merge_stg.planned_release_full_jops
        , pr_scope_merge_stg.planned_release_full_1
        , pr_scope_merge_stg.planned_release_type_jops
        , pr_scope_merge_stg.planned_release_major_jops
        , coalesce(
case when planned_release_type_jops='special' then
trim(both '_' from  cast(REGEXP_SUBSTR(PLANNED_RELEASE_FULL_jops,'\_[X|W]\d+\_',1,1,'i') as varchar(50)))
else
CASE 
   WHEN REGEXP_SUBSTR(planned_release_full_jops, '^\d+\.\d+[BPRWXxFf]', 1, 1, 'i') IS NOT NULL THEN
      CAST(REGEXP_SUBSTR(REGEXP_REPLACE(planned_release_full_jops, '^\d+\.\d+', NULL, 1, 1, 'i'), '^[BPRWXxFf]\d+', 1, 1, 'c') AS VARCHAR(48))
   ELSE
      NULL
END END,'UNK') as release_minor_jops
        , trim(pr_scope_merge_stg.planned_release_major_jops)||trim(release_minor_jops)
        , coalesce(case when state='verify-resolution' then coalesce(responsible_alias,dev_owner_alias,category_spoc)
else (case when dev_owner_alias is not null and responsible_alias is not null then
trim(dev_owner_alias)||'-'||trim(responsible_alias)
when dev_owner_alias is not null and responsible_alias is null then dev_owner_alias
when dev_owner_alias is null and responsible_alias is not null then responsible_alias
else category_spoc end) end,'UNK')
        , coalesce(CASE 
   WHEN REGEXP_SUBSTR(planned_release_full_jops, '^\d+\.\d+[BPRWXxFf]\d+-', 1, 1, 'i') IS NOT NULL THEN
      CAST(REGEXP_REPLACE(planned_release_full_jops, '^\d+\.\d+[BPRWXxFf]\d+-', NULL, 1, 1, 'i') AS VARCHAR(16))
   ELSE
      NULL
END,'UNK')
        , pr_scope_merge_stg.branch_type
        , pr_scope_merge_stg.ju_dashboard_release
        , CASE 
WHEN  release_minor_jops LIKE '%F%'
THEN 
planned_release_major_jops||'FV'
ELSE 
ju_release_major
END as ju_release_major
        , CASE 
WHEN  ju_release_minor='OTHER' AND release_minor_jops LIKE '%F%'
THEN 
release_minor_jops
ELSE 
ju_release_minor
END as ju_release_minor
        , TRIM(LEADING '_' FROM ju_branch_release)
        , CASE  WHEN  STATE    = 'verify-resolution'
      THEN CASE WHEN DBOwner_resp_alias IS NOT NULL
                THEN DBOwner_resp_alias
 		ELSE category_spoc
                END
      WHEN STATE   <>  'verify-resolution'
      THEN CASE WHEN DBOwner_resp_alias IS NOT NULL
                     AND DBOwner_dev_owner_alias IS NOT NULL
                THEN (DBOwner_dev_owner_alias ||'-'||DBOwner_resp_alias)
                WHEN DBOwner_resp_alias IS NOT NULL
                     AND DBOwner_dev_owner_alias IS NULL
		THEN DBOwner_resp_alias
		WHEN DBOwner_resp_alias IS NULL
		     AND DBOwner_dev_owner_alias IS NOT NULL
		THEN (DBOwner_dev_owner_alias ||'-'||category_spoc)
		WHEN DBOwner_resp_alias IS NULL
		     AND DBOwner_dev_owner_alias IS NULL
		THEN category_spoc
		ELSE category_spoc
                END
       ELSE category_spoc
       END AS DASHBOARD_OWNER_KEY
        , pr_scope_merge_stg.resolution_reason
        , CASE WHEN REGEXP_SIMILAR(planned_release, '^[1-9][0-9]?\.[0-9][wW].*', 'i') = 0
     THEN 0
     ELSE 1 END AS planned_release_flag
        , pr_scope_merge_ju_2_stg.active_release_flag
        , CASE WHEN branch_state IN('closed-abandoned','closed-withdrawn','closed-rejected')
          THEN 0
          ELSE 1 END AS branch_state_flag
        , CASE WHEN blocker NOT IN ('UNK','PendingBlocker')
             AND 
             planned_release_flag = 0
            AND 
            state not = 'closed'
            AND
            junos_ind ='Y'
            AND blocker_prs = 'Y'   
            AND branch_state_flag = 1     
             THEN 'Y'
             ELSE 'N' END AS  all_blocker_prs_Ind
        , CASE WHEN blocker NOT IN ('UNK','PendingBlocker')
      AND
      (blocker = 'beta' OR release_minor_jops IN ('B1','B2','B3'))
      AND 
      state not = 'closed'
            AND
            junos_ind ='Y'
      AND	 beta_blocker_prs = 'Y'
            AND branch_state_flag = 1
      THEN 'Y'
      ELSE 'N' END AS beta_blocker_prs_Ind
        , CASE WHEN blocker = 'PendingBlocker'
      AND 
      state not = 'closed'
            AND
            junos_ind ='Y'
	AND	            pendingblocker_prs = 'Y'
            AND branch_state_flag = 1
      THEN 'Y'
      ELSE 'N' END AS PendingMR_Blocker_PRs_Ind
        , CASE WHEN blocker = 'Toxic'
    AND
      state not = 'closed'
            AND
            junos_ind ='Y'
	AND	toxic_blocker_prs = 'Y'
            AND branch_state_flag = 1
      THEN 'Y'
      ELSE 'N' END AS toxic_blocker_prs_Ind
        , CASE WHEN blocker = 'Test'
    AND
      state not = 'closed'
            AND
            junos_ind ='Y'
	AND	            test_blockers = 'Y'
            AND branch_state_flag = 1
      THEN 'Y'
      ELSE 'N' END AS test_blocker_prs_Ind
        , CASE   WHEN  
CHAR_LENGTH(REGEXP_SUBSTR(PLANNED_RELEASE_FULL_jops,'^\d+\.\d+[xXwW]',1,1,'i'))  >1 OR 
CHAR_LENGTH(REGEXP_SUBSTR(PLANNED_RELEASE_FULL_jops,'^\d+\.+[xXwW]',1,1,'i'))  >1
THEN 'Y'
ELSE 'N'   
END AS x_w_release_prs_Ind
        , CASE WHEN blocker = 'TOT'
    AND
      state not = 'closed'
            AND
            junos_ind ='Y'
	AND	            tot_blocker_prs = 'Y'
            AND branch_state_flag = 1
      THEN 'Y'
      ELSE 'N' END AS tot_blocker_prs_Ind
        , CASE WHEN blocker NOT IN ('UNK','PendingBlocker')
           and
                      Fix_eta IS NULL
           and
           planned_release_flag = 0
      AND
                      state in('open','assigned','need-Info', 'need-setup','try-fix','under-analysis','under-review','ready-to-commit','awaiting-build')
            AND
            junos_ind ='Y'
       AND blockers_wo_fix_eta = 'Y'
            AND branch_state_flag = 1
      THEN 'Y'
      ELSE 'N' END AS blockers_without_fix_eta_Ind
        , CASE WHEN blocker NOT IN ('UNK','PendingBlocker')
          AND
         (blocker = 'Release' OR ju_release_minor like('%R%'))
          AND
         state not = 'closed'
            AND
            junos_ind ='Y'
	AND	release_blocker_prs = 'Y'
            AND branch_state_flag = 1
      THEN 'Y'
      ELSE 'N' END AS release_blocker_prs_Ind
        , CASE WHEN state NOT ='closed'
           AND
    planned_release_flag = 0
            AND
            junos_ind ='Y'
	AND	            prs_user = 'Y'
            AND branch_state_flag = 1
      THEN 'Y'
      ELSE 'N' END AS total_prs_Ind
        , CASE WHEN state NOT ='closed'
      AND
      planned_release_flag = 0
      AND
      problem_level LIKE '%CL1%'
            AND
            junos_ind ='Y'
            AND branch_state_flag = 1
     THEN 'Y'
      ELSE 'N' END AS CL1_Ind
        , pr_scope_merge_stg.sirt_state
        , CASE WHEN state NOT ='closed'
      AND
      planned_release_flag = 0
      AND
      problem_level LIKE '%CL2%'
            AND
            junos_ind ='Y'
            AND branch_state_flag = 1
	      THEN 'Y'
      ELSE 'N' END AS CL2_Ind
        , CASE WHEN state NOT ='closed'
      AND
      planned_release_flag = 0
      AND
      problem_level LIKE '%CL3%'
            AND
            junos_ind ='Y'
            AND branch_state_flag = 1
	      THEN 'Y'
      ELSE 'N' END AS CL3_Ind
        , CASE WHEN state NOT ='closed'
      AND
      planned_release_flag = 0
      AND
      problem_level LIKE '%CL4%'
            AND
            junos_ind ='Y'
            AND branch_state_flag = 1
	      THEN 'Y'
      ELSE 'N' END AS CL4_Ind
        , CASE WHEN state NOT ='closed'
      AND
      planned_release_flag = 0
      AND
      problem_level LIKE '%IL1%'
            AND
            junos_ind ='Y'
            AND branch_state_flag = 1
      THEN 'Y'
      ELSE 'N' END AS IL1_Ind
        , CASE WHEN state NOT ='closed'
      AND
      planned_release_flag = 0
      AND
      problem_level LIKE '%IL2%'
            AND
            junos_ind ='Y'
            AND branch_state_flag = 1
      THEN 'Y'
      ELSE 'N' END AS IL2_Ind
        , CASE WHEN state NOT ='closed'
      AND
      planned_release_flag = 0
      AND
      problem_level LIKE '%IL3%'
            AND
            junos_ind ='Y'
            AND branch_state_flag = 1
      THEN 'Y'
      ELSE 'N' END AS IL3_Ind
        , CASE WHEN state NOT ='closed'
      AND
      planned_release_flag = 0
      AND
      problem_level LIKE '%IL4%'
            AND
            junos_ind ='Y'
            AND branch_state_flag = 1
      THEN 'Y'
      ELSE 'N' END AS IL4_Ind
        , CASE WHEN problem_level in('2-CL2','4-CL3','4-IL2','5-IL3')
           AND
           planned_release_flag = 0
	   AND
           state not = 'closed'
            AND
            junos_ind ='Y'
	AND	major_prs = 'Y'
            AND branch_state_flag = 1
           THEN 'Y'
           ELSE 'N' END AS major_prs_Ind
        , CASE WHEN problem_level in('5-CL4','6-IL4')
           AND
           planned_release_flag = 0
	   AND
      state not = 'closed'
            AND
            junos_ind ='Y'
	AND	minor_prs = 'Y'
            AND branch_state_flag = 1
           THEN 'Y'
           ELSE 'N' END AS minor_prs_Ind
        , CASE WHEN            attributes_ LIKE '%regression-pr%'
           AND
           planned_release_flag = 0
	   AND
          state not = 'closed'
            AND
            junos_ind ='Y'
	 AND	regression_prs = 'Y'
            AND branch_state_flag = 1
           THEN 'Y'
           ELSE 'N' END AS regression_prs_Ind
        , CASE WHEN problem_level  in('1-CL1','3-IL1')
           AND
           planned_release_flag = 0
	   AND
      state not = 'closed'
            AND
            junos_ind ='Y'
	AND	critical_prs = 'Y'
            AND branch_state_flag = 1
           THEN 'Y'
           ELSE 'N' END AS critical_prs_Ind
        , CASE WHEN Category in('build-break', 'daily-build-failure')
           AND
           planned_release_flag = 0
	   AND
      state not = 'closed'
	AND	build_break_prs = 'Y'
            AND branch_state_flag = 1
           THEN 'Y'
           ELSE 'N' END AS build_break_prs_Ind
        , CASE WHEN customer_escalation='yes'
           AND
           planned_release_flag = 0
	   AND
      state not = 'closed'
            AND
            junos_ind ='Y'
	AND	Escalation_prs = 'Y'
            AND branch_state_flag = 1
           THEN 'Y'
           ELSE 'N' END AS Escalation_prs_Ind
        , CASE WHEN category = 'sisyphus-build-break'
           AND
           planned_release_flag = 0
	   AND
      state not = 'closed'
      AND
            junos_ind ='Y'
	AND	sisyphus_break_prs = 'Y'
            AND branch_state_flag = 1
           THEN 'Y'
           ELSE 'N' END AS sisyphus_build_break_prs_Ind
        , CASE WHEN problem_level in('1-CL1','2-CL2','3-IL1','4-IL2')
           AND
           planned_release_flag = 0
           AND
state in('open','assigned','need-Info', 'need-setup','try-fix','under-analysis','under-review','ready-to-commit','awaiting-build')           
            AND
            junos_ind ='Y'
 AND customer_crit_hi_prs = 'Y'
           AND
           submitter_id in('customer','field')
            AND branch_state_flag = 1
           THEN 'Y'
           ELSE 'N' END AS customer_crit_hi_prs_Ind
        , CASE WHEN  (CUST_VISIBLE_BEHAVIOR_CHANGED IN('YES') OR CVBC_PR_STATE in ( 'verify-resolution'))
                 AND
 KEYWORDS  not like '%CVBC-yes-approved-migration%' 
 AND
      CHARACTER_LENGTH(TRIM(IX_OWNER)) >1
                              AND
          junos_ind ='Y'
 AND cvbc_prs = 'Y'
            AND branch_state_flag = 1
          THEN 'Y'
                ELSE 'N' END AS cvbc_prs_Ind
        , CASE WHEN responsible = responsible_drvd
          AND
          DBOwner_resp_alias IS NULL
          AND
          planned_release_flag = 0
          AND
          state not = 'closed'
          AND
          junos_ind = 'Y'
          AND  prs_non_junos_cat_user = 'Y'
            AND branch_state_flag = 1
         THEN 'Y'
         ELSE 'N' END AS prs_non_junos_cat_user_Ind
        , CASE WHEN Branch_Type='DEV'
       AND
       planned_release NOT LIKE '%DEV_X%'
       AND
       ju_dashboard_release NOT LIKE '%X%'
       AND
       state not = 'closed'
       AND
       junos_ind ='Y'
	 AND	 prs_user_dev_branch = 'Y'
            AND branch_state_flag = 1
       THEN 'Y'
       ELSE 'N' END AS prs_user_dev_branch_Ind
        , CASE WHEN CHARACTER_LENGTH(TRIM( cust_visible_behavior_changed ))=1
      AND
      keywords LIKE '%auto-gen:default-changed%'
      AND
      state not = 'closed'
            AND
            junos_ind ='Y'
	AND	 cidb_prs = 'Y'
            AND branch_state_flag = 1
      THEN 'Y'
      ELSE 'N' END AS cidb_prs_Ind
        , CASE WHEN REGEXP_SIMILAR(planned_release, '^[1-9][0-9]?\.[0-9]$.*', 'i') = 1
      AND
      blocker <> 'UNK'
      AND
      blocker_type NOT = 'pendingblocker'
      AND
      state not = 'closed'
            AND
            junos_ind ='Y'
	AND	no_milestones_blocker_prs = 'Y'
            AND branch_state_flag = 1
      THEN 'Y'
      ELSE 'N' END AS no_milestones_blocker_prs_Ind
        , CASE WHEN ju_dashboard_release='OTHER'
     AND ju_branch_release = 'OTHER'
     AND state not = 'closed'
     AND junos_ind ='Y'
     AND prs_wo_release = 'Y'
     AND branch_state_flag = 1
     THEN 'Y'
     ELSE 'N' END AS prs_wo_release_Ind
        , CASE WHEN planned_release LIKE'PVT%'
    AND
      state not = 'closed'
            AND
            junos_ind ='Y'
	AND	prs_user_private_branch = 'Y'
            AND branch_state_flag = 1
      THEN 'Y'
      ELSE 'N' END AS prs_user_private_branch_Ind
        , CASE WHEN test_gap_analysis_status NOT IN('closed-not-fixed','closed')
      AND
      CHAR_LENGTH(TRIM(test_gap_analysis_status)) > 1
      AND
      CHAR_LENGTH(TRIM(systest_owner)) > 1
      AND
      state not = 'closed'
            AND
            junos_ind ='Y'
	AND unclosed_test = 'Y'
            AND branch_state_flag = 1
      THEN 'Y'
      ELSE 'N' END AS unclosed_test_Ind
        , CASE WHEN           responsible <> category_spoc
          AND
          DBOwner_resp_alias IS NULL
          AND
                    planned_release_flag=0
          AND
          state not = 'closed'
          AND
          junos_ind ='Y'
          AND prs_unassigned_cat_user = 'Y'
            AND branch_state_flag = 1
          THEN 'Y'
          ELSE 'N' END AS prs_unassigned_cat_user_Ind
        , CASE WHEN planned_release NOT LIKE '%DEV_X%'
         AND
         relname IN('unscheduled','n/a')
         AND
         branch_name LIKE 'DEV_%'
         AND
         state not = 'closed'
            AND
            junos_ind ='Y'
	AND     prs_user_unscheduled_dev = 'Y'
            AND branch_state_flag = 1
      THEN 'Y'
      ELSE 'N' END AS prs_user_unscheduled_dev_Ind
        , CASE WHEN branch_type LIKE '%DEV%'
      AND
      branch_name NOT LIKE '%DEV_X%'
      AND
      state not = 'closed'
            AND
            junos_ind ='Y'
	AND	branch_dev = 'Y'
            AND branch_state_flag = 1
      THEN 'Y'
      ELSE 'N' END AS branch_dev_Ind
        , CASE WHEN ju_branch_release NOT='OTHER'
      AND
      state not = 'closed'
            AND
            junos_ind ='Y'
	AND	branch_responsible = 'Y'
      AND branch_state_flag = 1
      THEN 'Y'
      ELSE 'N' END AS branch_responsible_Ind
        , COALESCE(pr_scope_merge_stg.jops_ib_ind, 0)
        , case when attributes_  like '%smoke-test%'
AND
planned_release_flag = 0
AND 
state not = 'closed'
AND
junos_ind ='Y'
AND branch_state_flag = 1
then 'Y'
else 'N' 
end as smoke_test_prs_ind
        , CASE 
	WHEN (blocker <> 'UNK' or problem_level in any ('1-CL1','2-CL2','4-CL3','3-IL1','4-IL2') )
	AND state not = 'closed'
	AND junos_ind ='Y'
		AND keywords not like '%not-issu%' 
	AND class_ not = 'feature' 
	AND Resolution not ='duplicate' 
	AND planned_release not like '%PVT%' 
	AND (REGEXP_SIMILAR(synopsis,'.*ISSU($|[^a-zA-Z]).*','i')=1 OR REGEXP_SIMILAR(synopsis,'.*NSR($|[^a-zA-Z]).*','i')=1 )
	THEN 'Y'
	ELSE 'N' 
END AS issu_nsr_prs_Ind
        , pr_scope_merge_stg.reported_in_components
        , pr_scope_merge_stg.scope_product_group
        , pr_scope_merge_stg.dependent_scopes
        , pr_scope_merge_stg.backlog_pr
        , pr_scope_merge_stg.partner
        , pr_scope_merge_stg.scope_rli
        , pr_scope_merge_stg.backlog_scope
        , pr_scope_merge_stg.release_note
  FROM [pr_scope_merge_stg] pr_scope_merge_stg
  LEFT OUTER JOIN [pr_scope_merge_ju_rls_ind_stg] pr_scope_merge_ju_2_stg
    ON pr_scope_merge_stg.id = pr_scope_merge_ju_2_stg.id
    AND pr_scope_merge_stg.identifier = 
  pr_scope_merge_ju_2_stg.identifier
  ;
  
  SET v_insert_count = v_insert_count + ACTIVITY_COUNT;

  SET v_step = 300;

  -- Work out the return message
  SET p_status = 1;
  SET v_msgtext = 'pr_scope_merge_fin1_stg updated. '
    || CAST(v_insert_count AS VARCHAR(64)) || ' new records. ';
  SET p_return_msg = v_msgtext;

  --=====================================================
  -- Write Success Audit Message
  --=====================================================
  
  -- WsWrkTask(job,task,seq,insert,update,replace,delete,discard,reject,error)
  CALL [METABASE].WsWrkTask(:p_job_id, :p_task_id, :p_sequence
    , :v_insert_count, 0, 0, 0, 0, 0, 0);



END;
